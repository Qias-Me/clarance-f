I need a prd for this workflow. I am trying to properly map the fields for each section into its respective component in C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\components\Rendered
C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\components


My currently workflow is:
1. Look at Each page in C:\Users\Jason\Desktop\AI-Coding\clarance-f\reports\field-hierarchy.json

Each page is represented by example "{pagenumber}":{...} Lines 2-748 in field-hierarchy.json


2. Based on the field example:
          {
                "name": "form1[0].Sections1-6[0].TextField11[0]",
                "id": "9449 0 R",
                "label": "Section 1. Full Name. Provide your full name. If you have only initials in your name, provide them and indicate \"Initial only\". If you do not have a middle name, indicate \"No Middle Name\". If you are a \"Jr.,\" \"Sr.,\" etc. enter this under Suffix. Last Name.\r",
                "value": "Sect1FirstName",
                "type": "PDFTextField",
                "section": 1,
                "sectionName": "Full Name",
                "confidence": 0.98
              },

Parse the id and properly update the proper section context with respect to this given metadata. The id will play a huge role as that value is used in the context key to reference each field. Keep in mind the 0 R has been taken off in the context for data redundancy, but it is added back at runtime for correct parsing. 

This field goes to Section 1 First Name, which belong in:
UpdatedModel.tsx -> PersonalInfo.tsx


Once All values have been properly mapped to context key, the Rendered Component needs to support the structure. 

in this case it would be RenderPersonalInfo in C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\components\Rendered

3. Adjust the FormHandler for adding and removing entries, as the section context key will have more values than the user may need in their instance. 

Consider this example, By default the context renders all 4 otherNames in Section 5, because of the section 5 context key in C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\state\contexts\updatedModel.tsx called namesInfo. 

When rendered in namesInfo.tsx the application shows all 4 otherNames, because it is referencing the namesInfo context in C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\state\contexts\sections

Can you see the problem?

I'd like to only render the other name values if the user pressed the add entry button, and propely remove them from the form if the user pressed the remove button...

But the context key must remain as it is used as a guide for the RenderedNamesInfo component. Thislogic needs to be corrected for all the sections. 

4. Validate in 

C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\components\Rendered
C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\components

by testing the inputs and functionality. I should be able to add and remove items, and those items should correlate to the actual form.. so if I add an entry to section 5, the ids for that 2nd entry, but align with the form context, or the values are not being accurately tracked and portrayed. 


The entire parsed form map in located in C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\utils\formHandler.tsx

so you can always reference that as the source of truth. 



Other Information:
I'm not sure if this is relevant at all, but I am using redux for the form state management. I'm using react context to maintain the form context throughout the application.





Resources:

Form Handler
C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\utils\formHandler.tsx

Form Context Key Overview
C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\state\contexts\updatedModel.tsx

Form Context Key the Section
C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\state\contexts\sections

Typescript Interfaces for Each section
C:\Users\Jason\Desktop\AI-Coding\clarance-f\api\interfaces\sections

React Component for each section
C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\components\Rendered
C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\components


DataFlow:
React Component -> React Context -> Form Handler -> Updatedodel.tsx -> section context key.

Problems:
The rendered component may not need all values in the context at a given entry. For example, section 5 defaults to showing all 4 entries, When hasNames which can be referenced from C:\Users\Jason\Desktop\AI-Coding\clarance-f\app\state\contexts\sections in the section 5 form is checked please render at least the first entry for the other Names. Section 5. 




Other Notes:

to achieve the task of propely mapping fled values and rendering them on the frontend BASED ON THE CURRENT PROJECT/ENVIRPMENT ALREADY OPENED.

Take a look at the package json and refer to cntext 7 mcp when needed based no the package version number